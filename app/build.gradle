plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id("org.jlleitschuh.gradle.ktlint")
    id('com.diffplug.spotless')
    id 'com.google.firebase.crashlytics'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {

    def getMyVersionCode = { ->
        return project.hasProperty('versionCode') ? versionCode.toInteger() : 100
    }

// get version name from the specified property argument `-PversionName` during the build call
    def getMyVersionName = { ->
        return project.hasProperty('versionName') ? versionName : "1.0.2-alpha10"
    }

    signingConfigs {
        release {
            if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
                storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["CM_KEY_ALIAS"]
                keyPassword System.getenv()["CM_KEY_PASSWORD"]
            } else {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }

    }

    compileSdkVersion 33

    defaultConfig {
        applicationId "chats.cash.chats_field"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode getMyVersionCode()
        versionName getMyVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release


        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'armeabi', 'x86', 'x86_64'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding true
    }

}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':lib-eyecooliris-uvc')
    //Added
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.google.android.material:material:1.9.0-alpha02'


    def nav_version = "2.6.0"


    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    def version_lifecycle = "2.6.1"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$version_lifecycle"

    implementation 'androidx.room:room-runtime:2.5.1'
    kapt 'androidx.room:room-compiler:2.5.1'
    implementation 'androidx.room:room-ktx:2.5.1'
    implementation 'androidx.room:room-rxjava2:2.5.1'

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation("io.coil-kt:coil:2.4.0")

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.7.1'

    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"
    // Mock web server
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation 'io.sentry:sentry-android:6.14.0'
    implementation 'com.treebo:internetavailabilitychecker:1.0.4'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.21'

    //Image cropper
    api 'com.theartofdev.edmodo:android-image-cropper:2.8.0'

    implementation 'com.nabinbhandari.android:permissions:3.8'
    implementation 'com.google.mlkit:face-detection:16.1.5'

    def camerax_version = "1.3.0-alpha07"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    // Koin
    implementation "io.insert-koin:koin-android:3.4.0"

    kapt "org.xerial:sqlite-jdbc:3.36.0"
    implementation 'id.zelory:compressor:3.0.0'
    implementation 'joda-time:joda-time:2.10.14'

    implementation platform('com.google.firebase:firebase-bom:28.2.0')
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.android.gms:play-services-location:21.0.1'


    //ccp
    implementation 'com.hbb20:ccp:2.7.0'

    // Google truth for assertion
    testImplementation "com.google.truth:truth:1.1.3"


    //Mock
    testImplementation "io.mockk:mockk:${mockkVersion}"

    //Lottie animation
    implementation 'com.airbnb.android:lottie:6.0.0'

    implementation 'com.amazonaws:aws-android-sdk-s3:2.71.0'

    implementation 'com.cloudinary:cloudinary-android:2.3.1'

}


ktlint {
    android.set(true)
    outputColorName.set("RED")
}